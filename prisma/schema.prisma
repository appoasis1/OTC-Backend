generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"

  url = env("DATABASE_URL")
}

model Buyer {
  buyer_id         Int                @id @default(autoincrement())
  first_name       String?
  last_name        String?
  country          String?
  password         String?
  email            String?            @unique
  phone            String?
  address_line1    String?
  address_line2    String?
  gender           String?
  profile_image    String?
  updated_at         DateTime           @default(now())
  created_at         DateTime           @default(now())
}


model Admin {
  admin_id         Int                @id @default(autoincrement())
  first_name       String?
  password         String?
  email            String?            @unique
  updated_at         DateTime           @default(now())
  created_at         DateTime           @default(now())
}
// Define the Category model
model Category {
  category_id Int       @id @default(autoincrement())
  name        String?
  description String?
  updated_at  DateTime  @default(now())
  created_at  DateTime  @default(now())
  status      String?
  products    Product[]
}

// Define the Product model
model Product {
  product_id    Int       @id @default(autoincrement())
  name          String?
  price         Float?
  updated_at    DateTime  @default(now())
  created_at    DateTime  @default(now())
  status        String?
  image         String?
  code          String?
  quantity      Int?
  min_order     String?
  deliverred_in String?
  vendor_name   String?
  description   String?
  manufacturer  String?
  is_taxable    Boolean   @default(false) // Add this line
  vendor        Vendor?   @relation(fields: [vendor_id], references: [vendor_id])
  vendor_id     Int?
  category      Category? @relation(fields: [category_id], references: [category_id])
  category_id   Int?
}


// Define the Quotation model
model Quotation {
  quotation_id         Int               @id @default(autoincrement())
  title                String?
  number               Int?
  updated_at           DateTime          @default(now())
  created_at           DateTime          @default(now())
  price                Float?
  sub_total            Float?
  total                Float?
  quantity             Int?
  terms_and_conditions String?
  request_id Int?
  buyer_id             Int?
  vendor_id            Int?
  items                Json?
  buyer_email          String?
  buyer_phone          String?
  supplier             String?
  address              String?
  phone                String?
  email                String?
  buyer                String?
  ref_number           String?
  ordered    Boolean   @default(false) 
  accepted             String?
}

model Order {
  order_id         Int               @id @default(autoincrement())
  title                String?
  number               Int?
  updated_at           DateTime          @default(now())
  created_at           DateTime          @default(now())
  buyer_id             Int?
  vendor_id            Int?
  items                Json?
  supplier             String?
  address              String?
  phone                String?
  email                String?
  buyer                String?
  accepted             String?
  request_id Int?
  quotation_id         Int?
}

model qRequest {
  request_id Int         @id @default(autoincrement())
  subject             String?
  updated_at          DateTime    @default(now())
  created_at          DateTime    @default(now())
  total               Float?
  quantity            Int?
  status              String?
  vendor_id           Int?
  buyer_id            Int?
  short_id            Int?
  buyer               String?
  items               Json?
  buyer_email String?
  buyer_phone String?
}

// Define the Short model
model Short {
  short_id                            Int               @id @default(autoincrement())
  updated_at                          DateTime          @default(now())
  created_at                          DateTime          @default(now())
  vendor                              Vendor?           @relation(fields: [vendor_id], references: [vendor_id])
  vendor_id                           Int?
  buyer_id                            Int
  product_id                          Json?
  quotationRequestQuotationrequest_id Int?
  items                            Json?
  products                            String?
  name                            String?
  price                            String?
   status                            String?
   image                            String?
    code         String?
  quantity     Int?
  description  String?
  manufacturer String?
  vendor_name String?
  buyer_email String?
  buyer_phone String?
}

// Define the Vendor model
model Vendor {
  vendor_id          Int                @id @default(autoincrement())
  first_name         String?
  email              String?            @unique
  password           String?
  last_name          String?
  business_name      String?
  country            String?
  terms              String?
  gender             String?
  phone              String?
  address_line1      String?
  address_line2      String?
  image        String?
  profile_image      String?
  business_logo      String?
  updated_at         DateTime           @default(now())
  created_at         DateTime           @default(now())
  products           Product[]
  Short              Short[]
}